from sqlalchemy import Column, Integer, String, Float, Boolean, DateTime, Date, Text, Enum
from sqlalchemy.dialects.postgresql import ARRAY, JSON
from db import Base

{% set enum_imports = model.fields | selectattr("enum_class_name") | map(attribute="enum_class_name") | unique | list %}
{% if enum_imports %}
from schemas.enums import {{ enum_imports | join(', ') }}
{% endif %}

class {{ model.name }}(Base):
    __tablename__ = '{{ model.name.lower() }}'

{% for field in model.fields %}
    {{ field.name }} = Column(
        {{ field.sqla_type }},
        primary_key={{ 'True' if field.is_primary else 'False' }},
        nullable={{ 'False' if field.required else 'True' }}
    )
{% endfor %}
