from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

{# === Imports === #}
{% for model in models %}
from routes.{{ model.snake }} import router as {{ model.snake }}_router
import models.{{ model.snake }}
{% endfor %}

app = FastAPI(
    title="Generated FastAPI App",
    description="This app was generated automatically from an OpenAPI spec.",
    version="1.0.0"
)

# âœ… CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# âœ… Include routers
{% for model in models %}
app.include_router({{ model.snake }}_router, prefix="/{{ model.plural }}", tags=["{{ model.name }}"])
{% endfor %}

@app.on_event("startup")
async def startup_event():
    print("ðŸš€ FastAPI app is starting up...")

@app.on_event("shutdown")
async def shutdown_event():
    print("ðŸ›‘ FastAPI app is shutting down...")

@app.get("/")
def read_root():
    return {"message": "Welcome to the Generated FastAPI API!"}
